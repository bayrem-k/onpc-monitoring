---
# Copyright 2018, OpenNext SAS
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Global tags
telegraf_global_tags:
  - tag_name: node_type
    tag_value: "{{ 'container' if inventory_hostname in groups['all_containers'] else 'host' }}"
  - tag_name: region
    tag_value: "{{ service_region }}" 

# agent variables
telegraf_agent_version: latest
telegraf_agent_metric_batch_size: 1024
telegraf_agent_metric_buffer_limit: 10240
telegraf_agent_quiet: True
telegraf_agent_hostname: "{{ ansible_hostname if inventory_hostname in groups['all_containers'] else inventory_hostname }}"

# Outputs
influxdb_telegraf_targets: "{{ influxdb_protocol|default('http') }}://{{ influxdb_host|default(internal_lb_vip_address) }}:{{ influxdb_port }}"
telegraf_agent_output:
  - type: influxdb
    config:
      - urls: ["{{ influxdb_telegraf_targets | map('quote') | join(',') }}"]
      - database: {{ monitoring_influxdb_name }}
      - precision: "s"
      - write_consistency: "any"
      - timeout: "5s"
  {%- if monitoring_prometheus_enabled | bool)  %}
  - type: prometheus_client
    config:
      - listen: "{{ outputs_prometheus_client_listen | default(':9126') }}"
      - expiration_interval: "{{ outputs_prometheus_client_expiration_interval | default('60s') }}"
  {%- endif %}

{% if inventory_hostname in groups['all_containers'] %}
telegraf_plugins_default:
  - plugin: cpu
    config:
      - percpu: false
  - plugin: io
  - plugin: mem
  - plugin: system
  - plugin: netstat
  - plugin: net
  - plugin: diskio
{% else %}
telegraf_plugins_default:
  - plugin: processes
  - plugin: cpu
    config:
      - percpu: true
      - totalcpu: true
  - conntrack:
    config:
      - files: ["ip_conntrack_count","ip_conntrack_max", "nf_conntrack_count","nf_conntrack_max"]
      - dirs: ["/proc/sys/net/ipv4/netfilter","/proc/sys/net/netfilter"]    
  - plugin: disk
    config:
      ignore_fs: ["tmpfs", "devtmpfs"]
      - mount_points: ["/","/var/lib/machines","/var/lib/nova/instances","/srv/swift[1-9]"]
  - plugin: diskio
  - plugin: io
  - plugin: mem
  - plugin: system
  - plugin: swap
  - plugin: netstat
  - plugin: net
    config:
      - interfaces: ["eth*","enp0s*","lo","br-vxlan","br-vlan","br-storage","br-mgmt", "lxcbr0" ]
  - plugin: bond
  - plugin: kernel
{% endif %}

telegraf_plugins_extra:
  {%- (if inventory_hostname in groups['collectd'] or if inventory_hostname in groups['nova_compute'])
         and (nova_virt_type | default('qemu') in ['kvm', 'qemu']) %}
  - socket_listener:
    config:
      - service_address: "udp://127.0.0.1:25826"
      - name_prefix: "collectd_"
      - data_format: "collectd"
      - collectd_typesdb: "{{ collectd_types_db_path }}"
  {%- endif %}
  {%- if inventory_hostname in groups['haproxy'] and (haproxy_stats_enabled | bool) %}
  - haproxy:
    config:
      - servers: ["https://{{haproxy_username}}:{{ haproxy_stats_password }}@{{ haproxy_stats_bind_address }}:{{ haproxy_stats_port }}/haproxy?stats"]
      - insecure_skip_verify: true
  {%- endif %}
  {%- if inventory_hostname in groups['swift-proxy_containers'] %}
  - statsd:
    config:
      - service_address: ":8125"
      - metric_separator: "."
      - templates: [
          "*.swift.proxy-server.*.*.*.* host.measurement.measurement.measurement.method.returncode.field*",
          "*.swift.proxy-server.*.policy.*.*.*.* host.measurement.measurement.measurement.measurement.measurement.method.returncode.field*",
        ]
  {%- endif %}
  {%- if inventory_hostname in groups['memcached'] %}
  - memcached:
    config:
      - servers: ["localhost:11211"]
  {%- endif %}
  {%- if inventory_hostname in groups['galera'] %}
  - mysql:
    config:
      - servers: ["{{ galera_root_user }}:{{ galera_root_password }}@tcp(127.0.0.1:3306)/"]
      - table_schema_databases: []
  {%- endif %}